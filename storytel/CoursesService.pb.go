// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CoursesService.proto

package storytel

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CoursesRequest struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoursesRequest) Reset()         { *m = CoursesRequest{} }
func (m *CoursesRequest) String() string { return proto.CompactTextString(m) }
func (*CoursesRequest) ProtoMessage()    {}
func (*CoursesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4aa81cbdc5384f1, []int{0}
}

func (m *CoursesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoursesRequest.Unmarshal(m, b)
}
func (m *CoursesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoursesRequest.Marshal(b, m, deterministic)
}
func (m *CoursesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoursesRequest.Merge(m, src)
}
func (m *CoursesRequest) XXX_Size() int {
	return xxx_messageInfo_CoursesRequest.Size(m)
}
func (m *CoursesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoursesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoursesRequest proto.InternalMessageInfo

func (m *CoursesRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

type CoursesResponse struct {
	Courses              []string `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoursesResponse) Reset()         { *m = CoursesResponse{} }
func (m *CoursesResponse) String() string { return proto.CompactTextString(m) }
func (*CoursesResponse) ProtoMessage()    {}
func (*CoursesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4aa81cbdc5384f1, []int{1}
}

func (m *CoursesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoursesResponse.Unmarshal(m, b)
}
func (m *CoursesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoursesResponse.Marshal(b, m, deterministic)
}
func (m *CoursesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoursesResponse.Merge(m, src)
}
func (m *CoursesResponse) XXX_Size() int {
	return xxx_messageInfo_CoursesResponse.Size(m)
}
func (m *CoursesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoursesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoursesResponse proto.InternalMessageInfo

func (m *CoursesResponse) GetCourses() []string {
	if m != nil {
		return m.Courses
	}
	return nil
}

func init() {
	proto.RegisterType((*CoursesRequest)(nil), "storytel.CoursesRequest")
	proto.RegisterType((*CoursesResponse)(nil), "storytel.CoursesResponse")
}

func init() { proto.RegisterFile("CoursesService.proto", fileDescriptor_d4aa81cbdc5384f1) }

var fileDescriptor_d4aa81cbdc5384f1 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x71, 0xce, 0x2f, 0x2d,
	0x2a, 0x4e, 0x2d, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x28, 0x2e, 0xc9, 0x2f, 0xaa, 0x2c, 0x49, 0xcd, 0x51, 0xd2, 0xe0, 0xe2, 0x83, 0xaa,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x2b, 0x2d, 0x4e, 0x2d, 0xca,
	0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x94, 0xb4, 0xb9, 0xf8, 0xe1, 0x2a,
	0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0x93, 0x21, 0x42, 0x12, 0x8c, 0x0a,
	0xcc, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x91, 0x1f, 0xdc, 0x58, 0xa8, 0xc5, 0x42, 0x36, 0x5c, 0xac,
	0x6e, 0xa9, 0x25, 0xc9, 0x19, 0x42, 0x12, 0x7a, 0x30, 0xcb, 0xf5, 0x50, 0x6d, 0x96, 0x92, 0xc4,
	0x22, 0x03, 0xb1, 0x29, 0x89, 0x0d, 0xec, 0x6e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18,
	0x37, 0x7f, 0xbb, 0xcf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoursesServiceClient is the client API for CoursesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoursesServiceClient interface {
	Fetch(ctx context.Context, in *CoursesRequest, opts ...grpc.CallOption) (*CoursesResponse, error)
}

type coursesServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoursesServiceClient(cc *grpc.ClientConn) CoursesServiceClient {
	return &coursesServiceClient{cc}
}

func (c *coursesServiceClient) Fetch(ctx context.Context, in *CoursesRequest, opts ...grpc.CallOption) (*CoursesResponse, error) {
	out := new(CoursesResponse)
	err := c.cc.Invoke(ctx, "/storytel.CoursesService/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoursesServiceServer is the server API for CoursesService service.
type CoursesServiceServer interface {
	Fetch(context.Context, *CoursesRequest) (*CoursesResponse, error)
}

// UnimplementedCoursesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoursesServiceServer struct {
}

func (*UnimplementedCoursesServiceServer) Fetch(ctx context.Context, req *CoursesRequest) (*CoursesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}

func RegisterCoursesServiceServer(s *grpc.Server, srv CoursesServiceServer) {
	s.RegisterService(&_CoursesService_serviceDesc, srv)
}

func _CoursesService_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoursesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoursesServiceServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storytel.CoursesService/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoursesServiceServer).Fetch(ctx, req.(*CoursesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoursesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storytel.CoursesService",
	HandlerType: (*CoursesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _CoursesService_Fetch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "CoursesService.proto",
}
